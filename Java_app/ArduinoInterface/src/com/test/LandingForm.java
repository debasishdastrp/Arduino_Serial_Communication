/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.test;
import com.fazecast.jSerialComm.*;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Debasish
 */
public class LandingForm extends javax.swing.JFrame {
                
    SerialPort sp = null;
    SendReceive sr = null;
    /**
     * Creates new form LandingForm
     */
    public LandingForm() {
        initComponents();
        
        sr = new SendReceive();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        onOffBtn8 = new javax.swing.JButton();
        onOffBtn9 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        connStatus = new javax.swing.JLabel();
        connBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(200, 200));
        setResizable(false);

        onOffBtn8.setText("Turn PIN-8 On / Off");
        onOffBtn8.setEnabled(false);
        onOffBtn8.setName("onOffBtn8"); // NOI18N
        onOffBtn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onOffBtn8ActionPerformed(evt);
            }
        });

        onOffBtn9.setText("Turn PIN-9 On / Off");
        onOffBtn9.setEnabled(false);
        onOffBtn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onOffBtn9ActionPerformed(evt);
            }
        });

        jPanel1.setName(""); // NOI18N

        connStatus.setText("Not Connected to the Device");

        connBtn.setText("Connect");
        connBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(connStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connStatus)
                    .addComponent(connBtn))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 173, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(onOffBtn9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(onOffBtn8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 174, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(onOffBtn8)
                .addGap(18, 18, 18)
                .addComponent(onOffBtn9)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void onOffBtn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onOffBtn8ActionPerformed
       String r =sr.sndrcv(2,sp);
       
      
        System.out.println("repon:"+r+":");
        if("1".equals(r))
        {
            onOffBtn8.setBackground(Color.GREEN);
            onOffBtn8.setText("Pin-8 is On");
            
        }else if("0".equals(r))
        {
            onOffBtn8.setBackground(Color.red);
            onOffBtn8.setText("Pin-8 is Off");
            
        }else
        {
            onOffBtn8.setBackground(Color.orange);
            onOffBtn8.setText("Error");
        }    
    }//GEN-LAST:event_onOffBtn8ActionPerformed

    
    
    
    
    private void onOffBtn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onOffBtn9ActionPerformed
        String r=sr.sndrcv(3,sp);
        
        System.out.println("repon:"+r+":");
        if("1".equals(r))
        {
            onOffBtn9.setBackground(Color.GREEN);
            onOffBtn9.setText("Pin-9 is On");
            
        }else if("0".equals(r))
        {
            onOffBtn9.setBackground(Color.red);
            onOffBtn9.setText("Pin-9 is Off");
            
        }else
        {
            onOffBtn9.setBackground(Color.orange);
            onOffBtn9.setText("Error");
        }
        
    }//GEN-LAST:event_onOffBtn9ActionPerformed

    private void connBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connBtnActionPerformed
        connBtn.setEnabled(false);
        connStatus.setText("Connecting to the Device. Please Wait...!");
        
        autoConnect();
        
    }//GEN-LAST:event_connBtnActionPerformed

    
    
    private void autoConnect()
    {
         Integer br = 9600;

        SerialPort ports[] = SerialPort.getCommPorts();
        System.out.println("Ports In the System");
        for (SerialPort port : ports)
        {
            System.out.println(port.getSystemPortName());
            if(connectVarify(port.getSystemPortName(),br))
            {
                System.out.println("Connection Successful");
                connStatus.setText("Connected to the Device on port: "+port.getSystemPortName());
                connStatus.setForeground(Color.blue);
                connBtn.setVisible(false);
                onOffBtn8.setEnabled(true);
                onOffBtn9.setEnabled(true);
                break;
            }else
            {
                System.out.println("Connection to the Device Failed");
                connStatus.setText("Connection to the Device Failed");
                connStatus.setForeground(Color.red);
                connBtn.setEnabled(true);
                onOffBtn8.setEnabled(false);
                onOffBtn9.setEnabled(false);
            }
        }
    }
    
    
    public boolean connectVarify(String comName,Integer BaudRate)
    {
        boolean pass = false;
        sp=SerialPort.getCommPort(comName);
        sp.setComPortParameters(BaudRate, 8, 1, 0);
        sp.setComPortTimeouts(SerialPort.TIMEOUT_WRITE_BLOCKING, 0, 0);
        if(sp.closePort())
        {
            System.out.println("Previous Connection Closed Successfully");
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(LandingForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            System.out.println("Previous Connection Failed to close");
        }
        
        if(sp.openPort())
        {
            System.out.println("Port Opened Successfully");
            Integer VarifyCode = 22;
            
            String chk = sr.sndrcv(VarifyCode, sp);
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(LandingForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println(chk);
            chk = sr.sndrcv(VarifyCode, sp);
            System.out.println(chk);
            chk = sr.sndrcv(VarifyCode, sp);
            System.out.println(chk);
            
            pass = chk.equals("1");
            
        }else
        {
            pass=false;
        }
        
        if(!pass)
        {
            if(sp.closePort())
            {
                System.out.println("Connection to "+comName+" closed");
                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    Logger.getLogger(LandingForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        return pass;
    }
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LandingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LandingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LandingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LandingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LandingForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connBtn;
    private javax.swing.JLabel connStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton onOffBtn8;
    private javax.swing.JButton onOffBtn9;
    // End of variables declaration//GEN-END:variables
}
